# This is a basic workflow to help you get started with Actions
name: Deploy To Server

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
        # [ master ]
        branches:
            - main
    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    Deploy:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
            - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
            - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
            - name: Checkout branch
              uses: actions/checkout@v2
              with:
                  ref: main
            - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
            # - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
            - name: List files in the repository
              run: |
                  ls ${{ github.workspace }}
            - run: echo "üçè This job's status is ${{ job.status }}."
            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 'v20.10.0'
            - name: Deploy
              uses: easingthemes/ssh-deploy@v2
              with:
                  SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
                  ARGS: '-rltgoDzvO -i --delete'
                  SOURCE: './'
                  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
                  REMOTE_USER: ${{ secrets.REMOTE_USER }}
                  TARGET: ${{ secrets.REMOTE_TARGET }}
                  EXCLUDE: '/temp/,/.git/,/logs/,/.github/'
                  SCRIPT_BEFORE: |
                      pwd
                      whoami
                      ls -al
                  SCRIPT_AFTER: |
                      cd ${{ secrets.REMOTE_TARGET }}
                      touch ~/rsync.log
                      pwd
                      bash ./script/deploy.sh
